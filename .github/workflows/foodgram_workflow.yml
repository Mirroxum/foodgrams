name: Foodgram workflow

on: [push]

jobs:
  # tests:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.7

  #   - name: Install dependencies
  #     run: | 
  #       python -m pip install --upgrade pip 
  #       pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
  #       pip install -r backend/requirements.txt 

  #   - name: Test with flake8 and django tests
  #     run: |
  #       python -m flake8 backend/

  # build_and_push_backend_to_docker_hub:
  #     name: Push Docker image to Docker Hub
  #     runs-on: ubuntu-latest
  #     # needs: tests
  #     if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
  #     steps:
  #       - name: Check out the repo
  #         uses: actions/checkout@v2 
  #       - name: Set up Docker Buildx
  #         uses: docker/setup-buildx-action@v1 
  #       - name: Login to Docker 
  #         uses: docker/login-action@v1 
  #         with:
  #           username: ${{ secrets.DOCKER_USERNAME }}
  #           password: ${{ secrets.DOCKER_PASSWORD }}
  #       - name: Push to Docker Hub
  #         uses: docker/build-push-action@v2 
  #         with:
  #           push: true
  #           tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_back:latest
  #           file: backend/Dockerfile

  # build_and_push_frontend_to_docker_hub:
  #     name: Push Docker image to Docker Hub
  #     runs-on: ubuntu-latest
  #     # needs: tests
  #     if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
  #     steps:
  #       - name: Check out the repo
  #         uses: actions/checkout@v2 
  #       - name: Set up Docker Buildx
  #         uses: docker/setup-buildx-action@v1 
  #       - name: Login to Docker 
  #         uses: docker/login-action@v1 
  #         with:
  #           username: ${{ secrets.DOCKER_USERNAME }}
  #           password: ${{ secrets.DOCKER_PASSWORD }}
  #       - name: Push to Docker Hub
  #         uses: docker/build-push-action@v2 
  #         with:
  #           push: true
  #           tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_front:latest
  #           file: frontend/Dockerfile

  # copy_infra_to_server:
  #   name: Copy docker-compose.yml and nginx.conf
  #   runs-on: ubuntu-latest
  #   # needs: tests
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Create projects directory
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.HOST_IP }}
  #       username: ${{ secrets.HOST_USER }}
  #       key: ${{ secrets.SSH_KEY }}
  #       passphrase: ${{ secrets.HOST_PASS }}
  #       script: |
  #         sudo rm -rf foodgram
  #         mkdir -p foodgram
  #   - name: Copy files
  #     uses: garygrossgarten/github-action-scp@release
  #     with:
  #         local: infra/
  #         remote: /home/${{ secrets.HOST_USER }}/foodgram/
  #         host: ${{ secrets.HOST_IP }}
  #         username: ${{ secrets.HOST_USER }}
  #         privateKey: ${{ secrets.SSH_KEY }}
  #         passphrase: ${{ secrets.HOST_PASS }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      # - copy_infra_to_server 
      - build_and_push_backend_to_docker_hub
      - build_and_push_frontend_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.HOST_PASS }}
        script: |
          cd foodgram
          sudo docker-compose stop
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_back:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_front:latest
          sudo docker-compose rm backend
          sudo docker-compose rm frontend
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: 
          ${{ github.workflow }} успешно выполнен пользователем
          ${{ github.actor }}. Комментарий - ${{github.event.commits[0].message}}.
          https://github.com/${{ github.repository }}/commit/${{github.sha}}



